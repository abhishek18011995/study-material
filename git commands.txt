FORK:
A GitHub fork is a copy of a repository (repo) that sits in your account rather than the account from which you forked the data from. Once you have forked a repo, you own your forked copy. This means that you can edit the contents of your forked repository without impacting the parent repo.

Challenge:
Login to your GitHub account.
Navigate to the earthLab/14ers-git/` repo.
Use the fork button to create your a fork of the 14ers-git repo in your account.

----------------------------------------------------------------------------------

Merge vs Rebase:
https://www.atlassian.com/git/tutorials/merging-vs-rebasing

Short Version
Merge takes all the changes in one branch and merges them into another branch in one commit.
Rebase says I want the point at which I branched to move to a new starting point
So when do you use either one?

Merge
Let's say you have created a branch for the purpose of developing a single feature. When you want to bring those changes back to master, you probably want merge (you don't care about maintaining all of the interim commits).
Rebase
A second scenario would be if you started doing some development and then another developer made an unrelated change. You probably want to pull and then rebase to base your changes from the current version from the repository.
----------------------------------------------------------------------------------
Set username & Password
git config --global user.name "Your Name"
git config --global user.email "your.email@your-place.com"


git config --global core.editor "notepad++ multiInst -nosession"

Test git configuration
git config --global -e

Configure P4Merge as Diff Tool in Git:
git config --global diff.tool p4merge
git config --global difftool.p4merge.path "C:/Program Files/Perforce/p4merge.exe"
git config --global difftool.prompt false

Configure P4Merge as Merge Tool in Git:
git config --global merge.tool p4merge
git config --global mergetool.p4merge.path "C:/Program Files/Perforce/p4merge.exe"
git config --global mergetool.prompt false



To Setup ssh key:
https://www.atlassian.com/git/tutorials/git-ssh

-> ls -a -l ~/.ssh

-> ssh-keygen -t rsa -b 4096  -C "abhishek18011995@gmail.com"

->  eval $(ssh-agent -s)

->  ssh-add  ~/.ssh/id_rsa

-> get concat string from pub ssh key
 cat ~/.ssh/id_rsa.pub
 
-> Test connection from github server
ssh -T git@github.com
